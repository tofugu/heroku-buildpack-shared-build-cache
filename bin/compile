#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

if [ "$(ls -A $CACHE_DIR)" ]; then
  echo "Build cache exists, skipping shared build cache restore"
  exit 0
fi

if [ -f $ENV_DIR/SHARED_BUILD_CACHE_APP_NAME ]; then
  SHARED_BUILD_CACHE_APP_NAME=$(cat $ENV_DIR/SHARED_BUILD_CACHE_APP_NAME)
else
  echo "SHARED_BUILD_CACHE_APP_NAME must be set to restore a build cache"
  exit 1
fi

if [ -f $ENV_DIR/HEROKU_API_KEY ]; then
  HEROKU_API_KEY=$(cat $ENV_DIR/HEROKU_API_KEY)
else
  echo "HEROKU_API_KEY must be set to restore a build cache"
  exit 1
fi

cache_get_url=$(curl -s https://api.heroku.com/apps/$SHARED_BUILD_CACHE_APP_NAME/build-metadata \
  -H "Accept: application/vnd.heroku+json; version=3.build-metadata" \
  -H "Authorization: Bearer $HEROKU_API_KEY" \
  | jq -r '.cache_get_url')

echo "Restoring shared build cache from app [$SHARED_BUILD_CACHE_APP_NAME]..."

start=`date +%s`

curl -s $cache_get_url | tar -C $CACHE_DIR -zxf -

end=`date +%s`
echo "(took $((end-start))s)"

echo "Cache directory top-level directory sizes:"
du -h -d 1 -c $CACHE_DIR | sort -h
